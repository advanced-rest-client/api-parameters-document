{
  "@context": {
    "raml-http": "http://a.ml/vocabularies/http#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "schema-org": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "hydra": "http://www.w3.org/ns/hydra/core#"
  },
  "@id": "amf://id",
  "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
  ],
  "doc:declares": [
    {
      "@id": "amf://id#1",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "MarkAnnotation",
      "raml-shapes:schema": {
        "@id": "amf://id#2",
        "@type": [
          "raml-shapes:NilShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "shacl:name": "MarkAnnotation"
      }
    },
    {
      "@id": "amf://id#3",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "deprecated",
      "raml-shapes:schema": {
        "@id": "amf://id#4",
        "@type": [
          "raml-shapes:ScalarShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:datatype": {
          "@id": "xsd:string"
        },
        "shacl:name": "deprecated"
      }
    },
    {
      "@id": "amf://id#5",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "clearanceLevel",
      "raml-shapes:schema": {
        "@id": "amf://id#6",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": false,
        "shacl:name": "schema",
        "shacl:property": [
          {
            "@id": "amf://id#7",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#8",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#8/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#9",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "low"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#10",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "medium"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#11",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "high"
                  }
                }
              },
              "shacl:name": "level"
            },
            "shacl:minCount": 1,
            "shacl:name": "level",
            "shacl:path": {
              "@id": "data:level"
            }
          },
          {
            "@id": "amf://id#12",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#13",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "signature",
              "shacl:pattern": "^\\d{3}-\\w{12}$"
            },
            "shacl:minCount": 1,
            "shacl:name": "signature",
            "shacl:path": {
              "@id": "data:signature"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#14",
      "@type": [
        "raml-shapes:ScalarShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "A feature to test enum values in the URI parameters.",
      "shacl:datatype": {
        "@id": "xsd:string"
      },
      "shacl:in": {
        "@id": "amf://id#14/list",
        "@type": "rdfs:Seq",
        "rdfs:_1": {
          "@id": "amf://id#15",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "A"
          }
        },
        "rdfs:_2": {
          "@id": "amf://id#16",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "B"
          }
        },
        "rdfs:_3": {
          "@id": "amf://id#17",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "C"
          }
        }
      },
      "shacl:name": "Feature"
    },
    {
      "@id": "amf://id#19",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "Person",
      "shacl:property": {
        "@id": "amf://id#21",
        "@type": [
          "shacl:PropertyShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "raml-shapes:range": {
          "@id": "amf://id#22",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "name"
        },
        "shacl:minCount": 1,
        "shacl:name": "name",
        "shacl:path": {
          "@id": "data:name"
        }
      }
    },
    {
      "@id": "amf://id#20",
      "@type": [
        "doc:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#24",
        "@type": "data:Object",
        "data:description": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "The collection of <<resourcePathName>>."
          }
        },
        "data:queryParameters": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
          "@type": "data:Object",
          "data:limit": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:default": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_10",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "25"
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Limit in the response list"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "100"
              }
            },
            "data:maximum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "300"
              }
            },
            "data:minimum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "1"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "number"
              }
            }
          },
          "data:nextPageToken": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19",
            "@type": "data:Object",
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_22",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_21",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
              }
            },
            "data:pattern": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_23",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "[a-zA-Z0-9]+"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_24",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_20",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "string"
              }
            }
          },
          "data:start": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12",
            "@type": "data:Object",
            "data:default": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_17",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "0"
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_14",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The start entry of the list"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_16",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "25"
              }
            },
            "data:minimum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_15",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "0"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_18",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_13",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "number"
              }
            }
          }
        },
        "data:responses": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25",
          "@type": "data:Object",
          "data:200": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28",
              "@type": "data:Object",
              "data:application%2Fjson": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29",
                "@type": "data:Object",
                "data:properties": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31",
                  "@type": "data:Object",
                  "data:items": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_35",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Contains a list of objects for this method."
                      }
                    },
                    "data:items": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_36",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "<<resourceType>>"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_34",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_33",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "array"
                      }
                    }
                  },
                  "data:nextPageToken": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_41",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_40",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_39",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_38",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/scalar_30",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "object"
                  }
                }
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/scalar_27",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
              }
            }
          },
          "data:400": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44",
              "@type": "data:Object",
              "data:application%2Fjson": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45",
                "@type": "data:Object",
                "data:displayName": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_46",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Invalid"
                  }
                },
                "data:properties": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48",
                  "@type": "data:Object",
                  "data:error": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_53",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Indicate that the response is errored."
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_52",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_51",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_50",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "boolean"
                      }
                    }
                  },
                  "data:message": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_56",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error message associated with the error."
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_57",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_58",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_55",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_47",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "object"
                  }
                }
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/scalar_43",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
              }
            }
          }
        }
      },
      "doc:variable": [
        "resourceType",
        "resourcePathName"
      ],
      "schema-org:name": "trait"
    },
    {
      "@id": "amf://id#42",
      "@type": [
        "raml-shapes:ArrayShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": [
        {
          "@id": "amf://id#43",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#44",
            "@type": [
              "data:Array",
              "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
            ],
            "data:pos0": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/numericRepeatable/array/schema/example/Some-test-example/array_1/scalar_2"
            },
            "data:pos1": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/numericRepeatable/array/schema/example/Some-test-example/array_1/scalar_3"
            },
            "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": [
              {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/numericRepeatable/array/schema/example/Some-test-example/array_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "123"
                }
              },
              {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/numericRepeatable/array/schema/example/Some-test-example/array_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "456"
                }
              }
            ]
          },
          "http://a.ml/vocabularies/document-source-maps#sources": {
            "@id": "amf://id#43/source-map",
            "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
            "http://a.ml/vocabularies/document-source-maps#tracked-element": {
              "http://a.ml/vocabularies/document-source-maps#element": "amf://id#43",
              "http://a.ml/vocabularies/document-source-maps#value": "amf://id#41"
            }
          },
          "schema-org:name": "Some-test-example",
          "shacl:raw": "[123, 456]"
        },
        {
          "@id": "amf://id#45",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#46",
            "@type": [
              "data:Array",
              "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
            ],
            "data:pos0": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/numericRepeatable/array/schema/example/Other-example/array_1/scalar_2"
            },
            "data:pos1": {
              "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/numericRepeatable/array/schema/example/Other-example/array_1/scalar_3"
            },
            "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": [
              {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/numericRepeatable/array/schema/example/Other-example/array_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "1011"
                }
              },
              {
                "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/numericRepeatable/array/schema/example/Other-example/array_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "1213"
                }
              }
            ]
          },
          "http://a.ml/vocabularies/document-source-maps#sources": {
            "@id": "amf://id#45/source-map",
            "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
            "http://a.ml/vocabularies/document-source-maps#tracked-element": {
              "http://a.ml/vocabularies/document-source-maps#element": "amf://id#45",
              "http://a.ml/vocabularies/document-source-maps#value": "amf://id#41"
            }
          },
          "schema-org:name": "Other-example",
          "shacl:raw": "[1011, 1213]"
        }
      ],
      "raml-shapes:items": {
        "@id": "amf://id#47",
        "@type": [
          "raml-shapes:ScalarShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:datatype": {
          "@id": "xsd:integer"
        }
      },
      "shacl:name": "amf_inline_type_1"
    }
  ],
  "doc:encodes": {
    "@id": "amf://id#27",
    "@type": [
      "schema-org:WebAPI",
      "doc:RootDomainElement",
      "doc:DomainElement"
    ],
    "raml-http:endpoint": [
      {
        "@id": "amf://id#28",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "amf://id#3": {
          "@id": "amf://id#57",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "This endpoint is deprecated and will be removed."
          },
          "doc:name": "deprecated"
        },
        "doc:customDomainProperties": {
          "@id": "amf://id#3"
        },
        "raml-http:parameter": {
          "@id": "amf://id#51",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "feature",
          "raml-http:schema": {
            "@id": "amf://id#52",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#52/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#53",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "A"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#54",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "B"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#55",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "C"
                }
              }
            },
            "shacl:name": "schema"
          },
          "schema-org:name": "feature",
          "hydra:required": true
        },
        "raml-http:path": "/test-parameters/{feature}",
        "hydra:supportedOperation": {
          "@id": "amf://id#29",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "schema-org:description": "To test enum values in the URI parameters for inline type declaration.",
          "hydra:expects": {
            "@id": "amf://id#30",
            "@type": [
              "raml-http:Request",
              "doc:DomainElement"
            ],
            "raml-http:parameter": [
              {
                "@id": "amf://id#31",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "amf://id#3": {
                  "@id": "amf://id#40",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Test parameter will be removed in next version of the API."
                  },
                  "doc:name": "deprecated"
                },
                "doc:customDomainProperties": {
                  "@id": "amf://id#3"
                },
                "raml-http:binding": "query",
                "raml-http:paramName": "testRepeatable",
                "raml-http:schema": {
                  "@id": "amf://id#32",
                  "@type": [
                    "raml-shapes:ArrayShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "amf://id#3": {
                    "@id": "amf://id#34",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Test parameter will be removed in next version of the API."
                    },
                    "doc:name": "deprecated"
                  },
                  "doc:customDomainProperties": {
                    "@id": "amf://id#3"
                  },
                  "doc:examples": {
                    "@id": "amf://id#35",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#36",
                      "@type": [
                        "data:Array",
                        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
                      ],
                      "data:pos0": {
                        "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/testRepeatable/array/schema/example/default-example/array_1/scalar_2"
                      },
                      "data:pos1": {
                        "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/testRepeatable/array/schema/example/default-example/array_1/scalar_3"
                      },
                      "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": [
                        {
                          "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/testRepeatable/array/schema/example/default-example/array_1/scalar_2",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "value1"
                          }
                        },
                        {
                          "@id": "file://demo/demo-api/demo-api.raml#/web-api/end-points/%2Ftest-parameters%2F%7Bfeature%7D/get/request/parameter/testRepeatable/array/schema/example/default-example/array_1/scalar_3",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "value2"
                          }
                        }
                      ]
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#35/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#35",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#31"
                      }
                    },
                    "shacl:raw": "[value1, value2]"
                  },
                  "raml-shapes:items": {
                    "@id": "amf://id#37",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    }
                  },
                  "shacl:name": "schema"
                },
                "schema-org:name": "testRepeatable",
                "hydra:required": true
              },
              {
                "@id": "amf://id#41",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "numericRepeatable",
                "raml-http:schema": {
                  "@id": "amf://id#42/linked_1",
                  "@type": [
                    "raml-shapes:ArrayShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "amf_inline_type_1",
                  "doc:link-target": {
                    "@id": "amf://id#42"
                  }
                },
                "schema-org:name": "numericRepeatable",
                "hydra:required": true
              },
              {
                "@id": "amf://id#48",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "notRequiredRepeatable",
                "raml-http:schema": {
                  "@id": "amf://id#49",
                  "@type": [
                    "raml-shapes:ArrayShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "raml-shapes:items": {
                    "@id": "amf://id#50",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:datatype": {
                      "@id": "xsd:date"
                    },
                    "shacl:name": "items"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:name": "notRequiredRepeatable",
                "hydra:required": false
              }
            ],
            "raml-http:payload": []
          },
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#58",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "amf://id#3": {
          "@id": "amf://id#68",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "This method will be removed in future release of the API."
          },
          "doc:name": "deprecated"
        },
        "doc:customDomainProperties": {
          "@id": "amf://id#3"
        },
        "raml-http:parameter": [
          {
            "@id": "amf://id#62",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "feature",
            "raml-http:schema": {
              "@id": "amf://id#63",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#63/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#53",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "A"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#54",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "B"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#55",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "C"
                  }
                }
              },
              "shacl:name": "schema"
            },
            "schema-org:name": "feature",
            "hydra:required": true
          },
          {
            "@id": "amf://id#64",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "path",
            "raml-http:paramName": "typeFeature",
            "raml-http:schema": {
              "@id": "amf://id#65",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "A feature to test enum values in the URI parameters.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#65/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#15",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "A"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#16",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "B"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#17",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "C"
                  }
                }
              },
              "shacl:name": "Feature"
            },
            "schema-org:name": "typeFeature",
            "hydra:required": true
          }
        ],
        "raml-http:path": "/test-parameters/{feature}/{typeFeature}",
        "hydra:supportedOperation": {
          "@id": "amf://id#59",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "amf://id#3": {
            "@id": "amf://id#61",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "This endpoint is deprecated and will be removed."
            },
            "doc:name": "deprecated"
          },
          "doc:customDomainProperties": {
            "@id": "amf://id#3"
          },
          "schema-org:description": "To test enum values in the URI parameters for global type declaration.",
          "hydra:method": "get"
        }
      },
      {
        "@id": "amf://id#69",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/people",
        "schema-org:description": "The people API used to access data about the people.",
        "schema-org:name": "People",
        "hydra:supportedOperation": {
          "@id": "amf://id#70",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "doc:extends": {
            "@id": "amf://id#71",
            "@type": [
              "doc:ParametrizedTrait",
              "doc:ParametrizedDeclaration",
              "doc:DomainElement"
            ],
            "doc:target": {
              "@id": "amf://id#20",
              "@type": [
                "doc:Trait",
                "doc:AbstractDeclaration",
                "doc:DomainElement"
              ],
              "doc:dataNode": {
                "@id": "amf://id#24",
                "@type": "data:Object",
                "data:description": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "The collection of <<resourcePathName>>."
                  }
                },
                "data:queryParameters": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
                  "@type": "data:Object",
                  "data:limit": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
                    "@type": "data:Object",
                    "data:default": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_10",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "25"
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_6",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Limit in the response list"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_9",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "100"
                      }
                    },
                    "data:maximum": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_7",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "300"
                      }
                    },
                    "data:minimum": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_8",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "1"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_11",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "false"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "number"
                      }
                    }
                  },
                  "data:nextPageToken": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_22",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_21",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                      }
                    },
                    "data:pattern": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_23",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "[a-zA-Z0-9]+"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_24",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "false"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_20",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  },
                  "data:start": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12",
                    "@type": "data:Object",
                    "data:default": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_17",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "0"
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_14",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The start entry of the list"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_16",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "25"
                      }
                    },
                    "data:minimum": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_15",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "0"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_18",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "false"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_13",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "number"
                      }
                    }
                  }
                },
                "data:responses": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25",
                  "@type": "data:Object",
                  "data:200": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29",
                        "@type": "data:Object",
                        "data:properties": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31",
                          "@type": "data:Object",
                          "data:items": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32",
                            "@type": "data:Object",
                            "data:description": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_35",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Contains a list of objects for this method."
                              }
                            },
                            "data:items": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_36",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "<<resourceType>>"
                              }
                            },
                            "data:required": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_34",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:type": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_33",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "array"
                              }
                            }
                          },
                          "data:nextPageToken": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37",
                            "@type": "data:Object",
                            "data:description": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_41",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                              }
                            },
                            "data:example": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_40",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                              }
                            },
                            "data:required": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_39",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:type": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_38",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "string"
                              }
                            }
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/scalar_30",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "object"
                          }
                        }
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/scalar_27",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
                      }
                    }
                  },
                  "data:400": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42",
                    "@type": "data:Object",
                    "data:body": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44",
                      "@type": "data:Object",
                      "data:application%2Fjson": {
                        "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45",
                        "@type": "data:Object",
                        "data:displayName": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_46",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Invalid"
                          }
                        },
                        "data:properties": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48",
                          "@type": "data:Object",
                          "data:error": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49",
                            "@type": "data:Object",
                            "data:description": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_53",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Indicate that the response is errored."
                              }
                            },
                            "data:example": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_52",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:required": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_51",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:type": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_50",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "boolean"
                              }
                            }
                          },
                          "data:message": {
                            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54",
                            "@type": "data:Object",
                            "data:description": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_56",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "The error message associated with the error."
                              }
                            },
                            "data:example": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_57",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                              }
                            },
                            "data:required": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_58",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:boolean",
                                "@value": "true"
                              }
                            },
                            "data:type": {
                              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_55",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "string"
                              }
                            }
                          }
                        },
                        "data:type": {
                          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_47",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "object"
                          }
                        }
                      }
                    },
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/scalar_43",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
                      }
                    }
                  }
                }
              },
              "doc:variable": [
                "resourceType",
                "resourcePathName"
              ],
              "schema-org:name": "trait"
            },
            "doc:variable": {
              "@id": "amf://id#72",
              "@type": [
                "doc:VariableValue",
                "doc:DomainElement"
              ],
              "doc:name": "resourceType",
              "doc:value": {
                "@id": "amf://id#73",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Person"
                }
              }
            },
            "schema-org:name": "Paginated"
          },
          "schema-org:description": "Returns a list of products.",
          "schema-org:name": "List people",
          "hydra:expects": {
            "@id": "amf://id#74",
            "@type": [
              "raml-http:Request",
              "doc:DomainElement"
            ],
            "raml-http:parameter": [
              {
                "@id": "amf://id#75",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "limit",
                "raml-http:schema": {
                  "@id": "amf://id#76",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#78",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#79",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "100"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#78/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#78",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#80"
                      }
                    },
                    "shacl:raw": "100"
                  },
                  "schema-org:description": "Limit in the response list",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#77",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "25"
                    }
                  },
                  "shacl:defaultValueStr": "25",
                  "shacl:maxInclusive": 300,
                  "shacl:minInclusive": 1,
                  "shacl:name": "schema"
                },
                "schema-org:description": "Limit in the response list",
                "schema-org:name": "limit",
                "hydra:required": false
              },
              {
                "@id": "amf://id#81",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "start",
                "raml-http:schema": {
                  "@id": "amf://id#82",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#84",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#85",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "25"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#84/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#84",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#86"
                      }
                    },
                    "shacl:raw": "25"
                  },
                  "schema-org:description": "The start entry of the list",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:defaultValue": {
                    "@id": "amf://id#83",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "0"
                    }
                  },
                  "shacl:defaultValueStr": "0",
                  "shacl:minInclusive": 0,
                  "shacl:name": "schema"
                },
                "schema-org:description": "The start entry of the list",
                "schema-org:name": "start",
                "hydra:required": false
              },
              {
                "@id": "amf://id#87",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "nextPageToken",
                "raml-http:schema": {
                  "@id": "amf://id#88",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#89",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#90",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#89/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#89",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#91"
                      }
                    },
                    "shacl:raw": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                  },
                  "schema-org:description": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema",
                  "shacl:pattern": "^[a-zA-Z0-9]+$"
                },
                "schema-org:description": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n",
                "schema-org:name": "nextPageToken",
                "hydra:required": false
              }
            ],
            "raml-http:payload": []
          },
          "hydra:method": "get",
          "hydra:returns": [
            {
              "@id": "amf://id#92",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:payload": {
                "@id": "amf://id#93",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#94",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:closed": false,
                  "shacl:name": "schema",
                  "shacl:property": [
                    {
                      "@id": "amf://id#95",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#96",
                        "@type": [
                          "raml-shapes:ArrayShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "raml-shapes:items": {
                          "@id": "amf://id#19/linked_2",
                          "@type": [
                            "shacl:NodeShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "doc:link-label": "Person",
                          "doc:link-target": {
                            "@id": "amf://id#19"
                          }
                        },
                        "schema-org:description": "Contains a list of objects for this method.",
                        "shacl:name": "items"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "items",
                      "shacl:path": {
                        "@id": "data:items"
                      }
                    },
                    {
                      "@id": "amf://id#97",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#98",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#99",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#100",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                            }
                          },
                          "shacl:raw": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                        },
                        "schema-org:description": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "nextPageToken"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "nextPageToken",
                      "shacl:path": {
                        "@id": "data:nextPageToken"
                      }
                    }
                  ]
                }
              },
              "schema-org:description": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n",
              "schema-org:name": "200",
              "hydra:statusCode": "200"
            },
            {
              "@id": "amf://id#101",
              "@type": [
                "raml-http:Response",
                "doc:DomainElement"
              ],
              "raml-http:payload": {
                "@id": "amf://id#102",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#103",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:name": "Invalid",
                  "shacl:closed": false,
                  "shacl:name": "schema",
                  "shacl:property": [
                    {
                      "@id": "amf://id#104",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#105",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#106",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#107",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:boolean",
                              "@value": "true"
                            }
                          },
                          "shacl:raw": "true"
                        },
                        "schema-org:description": "Indicate that the response is errored.",
                        "shacl:datatype": {
                          "@id": "xsd:boolean"
                        },
                        "shacl:name": "error"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "error",
                      "shacl:path": {
                        "@id": "data:error"
                      }
                    },
                    {
                      "@id": "amf://id#108",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#109",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#110",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#111",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                            }
                          },
                          "shacl:raw": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                        },
                        "schema-org:description": "The error message associated with the error.",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "message"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "message",
                      "shacl:path": {
                        "@id": "data:message"
                      }
                    }
                  ]
                }
              },
              "schema-org:description": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n",
              "schema-org:name": "400",
              "hydra:statusCode": "400"
            }
          ]
        }
      },
      {
        "@id": "amf://id#112",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:parameter": {
          "@id": "amf://id#113",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "personId",
          "raml-http:schema": {
            "@id": "amf://id#114",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#115",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#116",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "1234"
                }
              },
              "http://a.ml/vocabularies/document-source-maps#sources": {
                "@id": "amf://id#115/source-map",
                "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                  "http://a.ml/vocabularies/document-source-maps#element": "amf://id#115",
                  "http://a.ml/vocabularies/document-source-maps#value": "amf://id#113"
                }
              },
              "shacl:raw": "1234"
            },
            "schema-org:description": "The ID of the person in the system. It is generated by the database numeric value for the person.",
            "shacl:datatype": {
              "@id": "xsd:integer"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "The ID of the person in the system. It is generated by the database numeric value for the person.",
          "schema-org:name": "personId",
          "hydra:required": true
        },
        "raml-http:path": "/people/{personId}",
        "schema-org:description": "The endpoint to access information about the person",
        "schema-org:name": "A person"
      }
    ],
    "raml-http:server": {
      "@id": "amf://id#117",
      "@type": [
        "raml-http:Server",
        "doc:DomainElement"
      ],
      "raml-http:url": "http://{environment}.api.domain.com/{version}/",
      "raml-http:variable": [
        {
          "@id": "amf://id#118",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "environment",
          "raml-http:schema": {
            "@id": "amf://id#119",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The execution environments. Can be one of:\n- development\n- staging\n- qa\n- production\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#120",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "production"
              }
            },
            "shacl:defaultValueStr": "production",
            "shacl:in": {
              "@id": "amf://id#119/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#120",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "development"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#121",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "staging"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#122",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "qa"
                }
              },
              "rdfs:_4": {
                "@id": "amf://id#123",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "production"
                }
              }
            },
            "shacl:name": "schema",
            "shacl:pattern": "^(development|staging|qa|production)$"
          },
          "schema-org:description": "The execution environments. Can be one of:\n- development\n- staging\n- qa\n- production\n",
          "schema-org:name": "environment",
          "hydra:required": true
        },
        {
          "@id": "amf://id#124",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:schema": {
            "@id": "amf://id#125",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "version"
          },
          "schema-org:name": "version",
          "hydra:required": true
        }
      ]
    },
    "schema-org:name": "API parameters demo",
    "schema-org:version": "v1"
  },
  "doc:references": {
    "@id": "amf://id#26",
    "@type": [
      "doc:TraitFragment",
      "doc:Fragment",
      "doc:Unit"
    ],
    "doc:encodes": {
      "@id": "amf://id#20",
      "@type": [
        "doc:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#24",
        "@type": "data:Object",
        "data:description": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "The collection of <<resourcePathName>>."
          }
        },
        "data:queryParameters": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3",
          "@type": "data:Object",
          "data:limit": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:default": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_10",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "25"
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Limit in the response list"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "100"
              }
            },
            "data:maximum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "300"
              }
            },
            "data:minimum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "1"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_4/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "number"
              }
            }
          },
          "data:nextPageToken": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19",
            "@type": "data:Object",
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_22",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_21",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
              }
            },
            "data:pattern": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_23",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "[a-zA-Z0-9]+"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_24",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_19/scalar_20",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "string"
              }
            }
          },
          "data:start": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12",
            "@type": "data:Object",
            "data:default": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_17",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "0"
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_14",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The start entry of the list"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_16",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "25"
              }
            },
            "data:minimum": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_15",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "0"
              }
            },
            "data:required": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_18",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_3/object_12/scalar_13",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "number"
              }
            }
          }
        },
        "data:responses": {
          "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25",
          "@type": "data:Object",
          "data:200": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28",
              "@type": "data:Object",
              "data:application%2Fjson": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29",
                "@type": "data:Object",
                "data:properties": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31",
                  "@type": "data:Object",
                  "data:items": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_35",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Contains a list of objects for this method."
                      }
                    },
                    "data:items": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_36",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "<<resourceType>>"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_34",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_32/scalar_33",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "array"
                      }
                    }
                  },
                  "data:nextPageToken": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_41",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_40",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_39",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/object_31/object_37/scalar_38",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/object_28/object_29/scalar_30",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "object"
                  }
                }
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_26/scalar_27",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
              }
            }
          },
          "data:400": {
            "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44",
              "@type": "data:Object",
              "data:application%2Fjson": {
                "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45",
                "@type": "data:Object",
                "data:displayName": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_46",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Invalid"
                  }
                },
                "data:properties": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48",
                  "@type": "data:Object",
                  "data:error": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_53",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Indicate that the response is errored."
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_52",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_51",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_49/scalar_50",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "boolean"
                      }
                    }
                  },
                  "data:message": {
                    "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54",
                    "@type": "data:Object",
                    "data:description": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_56",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The error message associated with the error."
                      }
                    },
                    "data:example": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_57",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
                      }
                    },
                    "data:required": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_58",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:type": {
                      "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/object_48/object_54/scalar_55",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "string"
                      }
                    }
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/object_44/object_45/scalar_47",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "object"
                  }
                }
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/traits/pagination.raml#/trait/object_1/object_25/object_42/scalar_43",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
              }
            }
          }
        }
      },
      "doc:variable": [
        "resourceType",
        "resourcePathName"
      ],
      "schema-org:name": "trait"
    },
    "doc:usage": "This trait is to be used when the resource is paginated that is the edpoint producses\na list of resources in the response.\nEvery paginated response contains a `nextPageToken` property that should be used in pagination\nto request for next page of the results and `items` which is a list of resources.\nThe `items` property is always defined, even if the response is empty. Therefore the `404`\nresponse in this case is not possible. Clients need to handle empty responses by their own.\nIt is crutial that the subsequent requests contain the same set of parameters (like `limit`\nor `start`) because if this values will change then the `nextPageToken` will be revalidated\nand pagination will start from the first page.\n"
  }
}